version: "3.8"

services:
#  database:
#    image: postgres:10
#    container_name: postgres
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgresPassword
#      POSTGRES_DB: site
#    ports:
#      - "5431:5432"
#    volumes:
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#    networks:
#      - cloud
#    healthcheck:
#      test: pg_isready -U postgres
#      interval: 10s
#      timeout: 5s
#      retries: 5
#  elasticsearch:
#    image: elasticsearch:7.17.15
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#      - xpack.security.enabled=false
#    ports:
#      - "9201:9200"
#    networks:
#      - cloud
#    healthcheck:
#      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
#      interval: 30s
#      timeout: 10s
#      retries: 5
#  app:
#    build: .
#    image: search-application-image
#    container_name: application
#    ports:
#      - "8080:8080"
#    networks:
#      - cloud
##    depends_on:
##      elasticsearch:
##        condition: service_healthy
##      database:
##        condition: service_healthy
#    environment:
#      - "SPRING_DATASOURCE_USERNAME=postgres"
#      - "SPRING_DATASOURCE_PASSWORD=qwerty007"
#      - "SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/postgres"
#      - "SPRING_ELASTICSEARCH_URI=host.docker.internal:9200"
#      - "SPRING_ELASTICSEARCH_USERNAME="
#      - "SPRING_ELASTICSEARCH_PASSWORD="
#      - "SERVER_PORT=8080"
  grafana:
    build: './config/grafana'
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      monitoring:
        aliases:
          - grafana
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    networks:
      monitoring:
        aliases:
          - prometheus
networks:
  cloud:
    external: true
  monitoring:
